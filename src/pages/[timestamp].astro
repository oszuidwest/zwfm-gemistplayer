---
import Layout from "../layouts/Layout.astro";
const { timestamp } = Astro.params;
let audioUrl = `${Astro.locals.runtime.env.AUDIOLOGGER_URL}/${timestamp}.mp3`;

// Check if the audio file exists
let audioResponse = await fetch(audioUrl, { method: "HEAD" });
if (!audioResponse.ok) {
  return new Response(null, {
    status: 404,
    statusText: "Not found",
  });
}

let metadataResponse = await fetch(
  `${Astro.locals.runtime.env.AUDIOLOGGER_URL}/${timestamp}.meta`,
);
let metadata = (await metadataResponse.text()) ?? "No metadata available";
---

<Layout title="Welcome to Astro.">
  {
    metadata ? (
      <>
        <h1>{metadata}</h1>
        <p>{timestamp}</p>
      </>
    ) : (
      <>
        <h1>timestamp</h1>
      </>
    )
  }
  <audio id="js-audio" src={audioUrl}></audio>
  <button id="js-play">Play</button>
  <input id="js-audio-track" type="range" max="100" value="0" />
  <span id="js-duration">0:00</span>
  <span id="js-current-time">0:00</span>
</Layout>

<script>
  const calculateTime = (secs:number) => {
    const minutes = Math.floor(secs / 60);
    const seconds = Math.floor(secs % 60);
    const returnedSeconds = seconds < 10 ? `0${seconds}` : `${seconds}`;
    return `${minutes}:${returnedSeconds}`;
  };

  const whilePlaying = () => {
    seekSlider.value = "" + Math.floor(audio.currentTime);
    currentTimeContainer.textContent = calculateTime(Number(seekSlider.value));
    raf = requestAnimationFrame(whilePlaying);
  };

  const initPlayer = () => {
    durationContainer.textContent = calculateTime(audio.duration);
    seekSlider.max = "" + Math.floor(audio.duration);
  };

  const audio = document.getElementById("js-audio") as HTMLAudioElement;
  const seekSlider = document.getElementById(
    "js-audio-track",
  ) as HTMLInputElement;
  const durationContainer = document.getElementById(
    "js-duration",
  ) as HTMLSpanElement;
  const currentTimeContainer = document.getElementById(
    "js-current-time",
  ) as HTMLSpanElement;
  const playIconContainer = document.getElementById(
    "js-play",
  ) as HTMLSpanElement;
  let raf:number|null = null;

  playIconContainer.addEventListener("click", () => {
    if (audio.paused) {
      audio.play();
      raf = requestAnimationFrame(whilePlaying);
    } else {
      audio.pause();
      if (raf) {
        cancelAnimationFrame(raf);
      }
    }
  });

  if (audio.readyState > 0) {
    initPlayer();
  } else {
    audio.addEventListener("loadedmetadata", () => {
      initPlayer();
    });
  }

  seekSlider.addEventListener("input", () => {
    currentTimeContainer.textContent = calculateTime(Number(seekSlider.value));
    if (!audio.paused) {
      if(raf) {
        cancelAnimationFrame(raf);
      }
    }
  });

  seekSlider.addEventListener("change", () => {
    audio.currentTime = Number(seekSlider.value);
    if (!audio.paused) {
      requestAnimationFrame(whilePlaying);
    }
  });
</script>
