---
import Layout from "../../layouts/Layout.astro";
import { decode } from 'html-entities';
const { station, timestamp } = Astro.params;

interface StationConfig {
  slug: string;
  audioLoggerUrl: string;
  stationName: string;
  stationBluesky: string;
  stationColor: string;
  openGraphImage: string;
}

const configs: StationConfig[] = [
  {
    slug: "zwfm",
    audioLoggerUrl: "https://audio.zuidwest.cloud/zuidwest",
    stationName: "ZuidWest FM",
    stationBluesky: "zuidwestfm.bsky.social",
    stationColor: "#e6007e",
    openGraphImage:
      "https://cdn.zuidwestupdate.nl/NsUmF_oC7q3NnWIO89789QePS9Pfoimr_4HOZJNVq2I/rs:fill:1280:720:1/g:ce/aHR0cHM6Ly93d3cuenVpZHdlc3R1cGRhdGUubmwvd3AtY29udGVudC91cGxvYWRzLzIwMjEvMDYvc3R1ZGlvX3p3Zm1fcG9zdGVyLmpwZw.jpeg",
  },
  {
    slug: "rucphen",
    audioLoggerUrl: "https://audio.zuidwest.cloud/rucphen",
    stationName: "Rucphen RTV",
    stationBluesky: "rucphenfm.bsky.social",
    stationColor: "#003576",
    openGraphImage:
      "https://rucphenrtv.nl/wp-content/uploads/2021/07/20210717Studio.jpg",
  },
];

const stationConfig = configs.find((config) => config.slug === station);
if (!stationConfig) {
  return new Response(null, {
    status: 404,
    statusText: "Not found",
  });
}
const {
  audioLoggerUrl,
  stationName,
  stationBluesky,
  stationColor,
  openGraphImage,
} = stationConfig;

let dateRegex = /^(\d{4})-(\d{2})-(\d{2})_(\d{2})$/;
if (!timestamp || !dateRegex.test(timestamp)) {
  return new Response(null, {
    status: 404,
    statusText: "Not found",
  });
}

let audioUrl = `${audioLoggerUrl}/${timestamp}.mp3`;

// Check if the audio file exists
let audioResponse = await fetch(audioUrl, { method: "HEAD" });
if (!audioResponse.ok) {
  return new Response(null, {
    status: 404,
    statusText: "Not found",
  });
}

const t = Astro.url.searchParams.get("t");
let startTime = 0;
let shareFromTimestamp = false;
if (t) {
  startTime = parseInt(t, 10);
  audioUrl += "#t=" + startTime;
  shareFromTimestamp = true;
}

// Decoder for HTML entities
function decodeHtmlEntities(text: string): string {
  if (!text) return '';
  return decode(text);
}

let metadataResponse = await fetch(`${audioLoggerUrl}/${timestamp}.meta`);
let showName = decodeHtmlEntities((await metadataResponse.text()).trim());
if (!showName) {
  showName = "Onbekend programma";
}

// Timestamp is in the form of 2024-05-18_11. Convert that into a date object using a regex
let [, year, month, day, hour] = timestamp.match(dateRegex)!;
let showDate = new Date(
  Number(year),
  Number(month) - 1,
  Number(day),
  Number(hour),
);

const title = `${showName} van ${showDate.toLocaleDateString("NL", { dateStyle: "medium" })} om ${showDate.getHours()} uur`;
const description = `Luister ${showName} van ${showDate.toLocaleDateString("NL", { dateStyle: "medium" })} om ${showDate.getHours()} uur op ${stationName} terug.`;
---

<Layout brandColor={stationColor}>
  <title slot="head">{title}</title>
  <script slot="head" defer event-station={stationName} event-program={showName} src="https://stats.zuidwesttv.nl/js/script.pageview-props.js"></script>
  <meta slot="head" name="description" content={description} />
  <meta slot="head" property="og:title" content={`ðŸ“» ${title}`} />
  <meta slot="head" property="og:description" content={description} />
  <meta slot="head" property="og:type" content="music.song" />
  <meta slot="head" property="og:site_name" content={stationName} />
  <meta slot="head" property="og:image" content={openGraphImage} />
  <meta slot="head" property="og:locale" content="nl_NL" />

  <main class="grid min-h-full place-items-center bg-gray-50 px-4 py-8">
    <div
      class="w-full max-w-2xl overflow-hidden rounded-xl bg-white shadow-md"
    >
      <div class="relative bg-gradient-to-r from-brand to-brand-dark p-6 text-white">
        <div class="pr-12">
          <h1 class="text-2xl font-bold">{showName}</h1>
          <p class="mt-1 text-sm opacity-90">
            {showDate.toLocaleDateString("nl", { dateStyle: "medium" })}
            {" om "}
            {showDate.toLocaleTimeString("nl", { timeStyle: "short" })}
          </p>
        </div>
        <a
          href={audioUrl}
          class="absolute right-6 top-1/2 -translate-y-1/2 rounded-full bg-white bg-opacity-20 p-2 backdrop-blur transition-all duration-200 hover:bg-opacity-30 focus:outline-none focus:ring-2 focus:ring-white focus:ring-opacity-50"
          title="Downloaden"
        >
          <svg
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 20 20"
            fill="currentColor"
            class="size-5"
          >
            <path
              d="M10.75 2.75a.75.75 0 0 0-1.5 0v8.614L6.295 8.235a.75.75 0 1 0-1.09 1.03l4.25 4.5a.75.75 0 0 0 1.09 0l4.25-4.5a.75.75 0 0 0-1.09-1.03l-2.955 3.129V2.75Z"
            ></path>
            <path
              d="M3.5 12.75a.75.75 0 0 0-1.5 0v2.5A2.75 2.75 0 0 0 4.75 18h10.5A2.75 2.75 0 0 0 18 15.25v-2.5a.75.75 0 0 0-1.5 0v2.5c0 .69-.56 1.25-1.25 1.25H4.75c-.69 0-1.25-.56-1.25-1.25v-2.5Z"
            ></path>
          </svg>
        </a>
      </div>
      <div class="p-6">
        <audio id="js-audio" src={audioUrl} data-start-time={startTime}></audio>
        <div class="mb-8">
          <div class="flex flex-col items-center space-y-6">
            <button
              id="js-play"
              class="group relative size-20 rounded-full bg-gradient-to-br from-brand to-brand-dark text-white shadow-xl transition-all duration-300 hover:scale-105 hover:shadow-2xl active:scale-95"
            >
              <div class="absolute inset-0 rounded-full bg-white opacity-0 transition-opacity duration-300 group-hover:opacity-10"></div>
              <svg
                xmlns="http://www.w3.org/2000/svg"
                viewBox="0 0 24 24"
                fill="currentColor"
                class="absolute left-1/2 top-1/2 w-10 -translate-x-1/2 -translate-y-1/2 transition-transform duration-200 group-hover:scale-110 group-data-[state=playing]:hidden"
              >
                <path
                  fill-rule="evenodd"
                  d="M4.5 5.653c0-1.427 1.529-2.33 2.779-1.643l11.54 6.347c1.295.712 1.295 2.573 0 3.286L7.28 19.99c-1.25.687-2.779-.217-2.779-1.643V5.653Z"
                  clip-rule="evenodd"></path>
              </svg>
              <svg
                xmlns="http://www.w3.org/2000/svg"
                viewBox="0 0 24 24"
                fill="currentColor"
                class="absolute left-1/2 top-1/2 hidden w-10 -translate-x-1/2 -translate-y-1/2 transition-transform duration-200 group-hover:scale-110 group-data-[state=playing]:block"
              >
                <path
                  fill-rule="evenodd"
                  d="M6.75 5.25a.75.75 0 0 1 .75-.75H9a.75.75 0 0 1 .75.75v13.5a.75.75 0 0 1-.75.75H7.5a.75.75 0 0 1-.75-.75V5.25Zm7.5 0A.75.75 0 0 1 15 4.5h1.5a.75.75 0 0 1 .75.75v13.5a.75.75 0 0 1-.75.75H15a.75.75 0 0 1-.75-.75V5.25Z"
                  clip-rule="evenodd"></path>
              </svg>
            </button>
            
            <div class="w-full space-y-3">
              <div class="relative">
                <input
                  id="js-audio-track"
                  class="audio-slider h-2 w-full cursor-pointer appearance-none rounded-full bg-gray-200"
                  type="range"
                  max="100"
                  value="0"
                />
              </div>
              <div class="flex items-center justify-between text-sm text-gray-600">
                <span class="js-current-time font-medium tabular-nums">00:00</span>
                <span id="js-duration" class="font-medium tabular-nums">0:00</span>
              </div>
            </div>
          </div>
        </div>

        <div class="border-t pt-6">
          <p
            class="mb-4 text-sm font-semibold uppercase tracking-wider text-gray-600"
          >
            Deel dit op
          </p>
        <div class="-m-1 mb-2 flex flex-wrap items-center">
          <a
            id="js-share-bluesky"
            href="#"
            target="_blank"
            style="color: #00A8E8"
            class="m-1 flex items-center rounded-lg border border-current px-2 py-1 text-sm transition-all duration-200 hover:shadow-md"
            data-bluesky-handle={stationBluesky}
          >
            <svg
              width="16"
              height="16"
              viewBox="0 0 600 530"
              class="mr-1.5 fill-current"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="m135.72 44.03c66.496 49.921 138.02 151.14 164.28 205.46 26.262-54.316 97.782-155.54 164.28-205.46 47.98-36.021 125.72-63.892 125.72 24.795 0 17.712-10.155 148.79-16.111 170.07-20.703 73.984-96.144 92.854-163.25 81.433 117.3 19.964 147.14 86.092 82.697 152.22-122.39 125.59-175.91-31.511-189.63-71.766-2.514-7.3797-3.6904-10.832-3.7077-7.8964-0.0174-2.9357-1.1937 0.51669-3.7077 7.8964-13.714 40.255-67.233 197.36-189.63 71.766-64.444-66.128-34.605-132.26 82.697-152.22-67.108 11.421-142.55-7.4491-163.25-81.433-5.9562-21.282-16.111-152.36-16.111-170.07 0-88.687 77.742-60.816 125.72-24.795z"
              ></path>
            </svg>
            Bluesky</a
          >
          <a
            id="js-share-facebook"
            href="#"
            target="_blank"
            style="color: #3B5999"
            class="m-1 flex items-center rounded-lg border border-current px-2 py-1 text-sm transition-all duration-200 hover:shadow-md"
          >
            <svg
              width="16"
              height="16"
              viewBox="0 0 24 24"
              class="mr-1.5 fill-current"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M9.198 21.5h4v-8.01h3.604l.396-3.98h-4V7.5a1 1 0 0 1 1-1h3v-4h-3a5 5 0 0 0-5 5v2.01h-2l-.396 3.98h2.396v8.01z"
              ></path>
            </svg>
            Facebook</a
          >
          <a
            id="js-share-whatsapp"
            href="#"
            style="color: #25D366"
            class="m-1 flex items-center rounded-lg border border-current px-2 py-1 text-sm transition-all duration-200 hover:shadow-md"
          >
            <svg
              width="16"
              height="16"
              viewBox="0 0 24 24"
              class="mr-1.5 fill-current"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M17.472 14.382c-.297-.149-1.758-.867-2.03-.967-.273-.099-.471-.148-.67.15-.197.297-.767.966-.94 1.164-.173.199-.347.223-.644.075-.297-.15-1.255-.463-2.39-1.475-.883-.788-1.48-1.761-1.653-2.059-.173-.297-.018-.458.13-.606.134-.133.298-.347.446-.52.149-.174.198-.298.298-.497.099-.198.05-.371-.025-.52-.075-.149-.669-1.612-.916-2.207-.242-.579-.487-.5-.669-.51-.173-.008-.371-.01-.57-.01-.198 0-.52.074-.792.372-.272.297-1.04 1.016-1.04 2.479 0 1.462 1.065 2.875 1.213 3.074.149.198 2.096 3.2 5.077 4.487.709.306 1.262.489 1.694.625.712.227 1.36.195 1.871.118.571-.085 1.758-.719 2.006-1.413.248-.694.248-1.289.173-1.413-.074-.124-.272-.198-.57-.347m-5.421 7.403h-.004a9.87 9.87 0 01-5.031-1.378l-.361-.214-3.741.982.998-3.648-.235-.374a9.86 9.86 0 01-1.51-5.26c.001-5.45 4.436-9.884 9.888-9.884 2.64 0 5.122 1.03 6.988 2.898a9.825 9.825 0 012.893 6.994c-.003 5.45-4.437 9.884-9.885 9.884m8.413-18.297A11.815 11.815 0 0012.05 0C5.495 0 .16 5.335.157 11.892c0 2.096.547 4.142 1.588 5.945L.057 24l6.305-1.654a11.882 11.882 0 005.683 1.448h.005c6.554 0 11.89-5.335 11.893-11.893a11.821 11.821 0 00-3.48-8.413Z"
              ></path>
            </svg>
            WhatsApp</a
          >
          <a
            id="js-share-mail"
            href="#"
            class="m-1 flex flex-none items-center whitespace-nowrap rounded-lg border border-gray-300 px-2 py-1 text-sm text-gray-700 transition-all duration-200 hover:shadow-md hover:border-gray-400"
          >
            <svg
              width="16"
              height="16"
              class="mr-1.5 fill-current"
              xmlns="http://www.w3.org/2000/svg"
              viewBox="0 0 24 24"
            >
              <path
                d="M 12 2 C 6.4886661 2 2 6.4886661 2 12 C 2 17.511334 6.4886661 22 12 22 L 16 22 A 1.0001 1.0001 0 1 0 16 20 L 12 20 C 7.5693339 20 4 16.430666 4 12 C 4 7.5693339 7.5693339 4 12 4 C 16.430666 4 20 7.5693339 20 12 L 20 13.5 C 20 14.340812 19.340812 15 18.5 15 C 17.659188 15 17 14.340812 17 13.5 L 17 12 A 1.0001 1.0001 0 0 0 16.994141 11.888672 C 16.933859 9.1903924 14.712044 7 12 7 C 9.2504209 7 7 9.2504209 7 12 C 7 14.749579 9.2504209 17 12 17 C 13.413556 17 14.687859 16.398875 15.599609 15.447266 C 16.230695 16.380863 17.297708 17 18.5 17 C 20.421188 17 22 15.421188 22 13.5 L 22 12 C 22 6.4886661 17.511334 2 12 2 z M 12 9 C 13.668699 9 15 10.331301 15 12 C 15 13.668699 13.668699 15 12 15 C 10.331301 15 9 13.668699 9 12 C 9 10.331301 10.331301 9 12 9 z"
              ></path>
            </svg>
            E-mail</a
          >
          </div>
          <div class="mt-4 rounded-lg bg-gray-50 p-3">
            <label class="flex items-center text-sm text-gray-600 cursor-pointer hover:text-gray-800">
              <input
                type="checkbox"
                id="js-use-timestamp"
                class="mr-2 accent-brand"
                checked={shareFromTimestamp}
              />
              <span>Delen vanaf <span class="js-current-time font-medium">0:00</span></span>
            </label>
          </div>
        </div>
      </div>
    </div>
  </main>
</Layout>

<style>
  .audio-slider::-webkit-slider-track {
    @apply h-2 w-full cursor-pointer rounded-full bg-gray-200;
  }
  
  .audio-slider::-moz-range-track {
    @apply h-2 w-full cursor-pointer rounded-full bg-gray-200;
  }
  
  .audio-slider::-webkit-slider-thumb {
    @apply h-5 w-5 cursor-pointer appearance-none rounded-full bg-white transition-all duration-200 hover:scale-110;
    margin-top: -6px;
    box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.1), 0 2px 4px rgba(0, 0, 0, 0.2), 0 4px 8px rgba(0, 0, 0, 0.1);
  }
  
  .audio-slider::-webkit-slider-thumb:hover {
    box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.1), 0 2px 6px rgba(0, 0, 0, 0.3), 0 8px 16px rgba(0, 0, 0, 0.15);
  }
  
  .audio-slider::-moz-range-thumb {
    @apply h-5 w-5 cursor-pointer rounded-full border-0 bg-white transition-all duration-200 hover:scale-110;
    box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.1), 0 2px 4px rgba(0, 0, 0, 0.2), 0 4px 8px rgba(0, 0, 0, 0.1);
  }
  
  .audio-slider::-moz-range-thumb:hover {
    box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.1), 0 2px 6px rgba(0, 0, 0, 0.3), 0 8px 16px rgba(0, 0, 0, 0.15);
  }
  
  .audio-slider::-webkit-slider-runnable-track {
    background: linear-gradient(to right, var(--brand-color) 0%, var(--brand-color) var(--seek-percentage, 0%), #e5e7eb var(--seek-percentage, 0%), #e5e7eb 100%);
  }
  
  .audio-slider::-moz-range-progress {
    @apply h-2 rounded-full bg-brand;
  }
</style>

<script>
  const calculateTime = (secs: number) => {
    const minutes = ("0" + Math.floor(secs / 60)).slice(-2);
    const seconds = ("0" + Math.floor(secs % 60)).slice(-2);
    return `${minutes}:${seconds}`;
  };

  const updateCurrentTime = () => {
    for (const container of currentTimeContainers) {
      container.textContent = calculateTime(Number(seekSlider.value));
    }
    // Update slider progress color
    const percentage = (Number(seekSlider.value) / Number(seekSlider.max)) * 100;
    seekSlider.style.setProperty('--seek-percentage', `${percentage}%`);
  };

  const whilePlaying = () => {
    seekSlider.value = "" + Math.floor(audio.currentTime);
    updateCurrentTime();
    raf = requestAnimationFrame(whilePlaying);
  };

  const initPlayer = () => {
    audio.currentTime = audio.dataset.startTime
      ? Number(audio.dataset.startTime)
      : 0;
    seekSlider.max = "" + Math.floor(audio.duration);
    seekSlider.value = "" + Math.floor(audio.currentTime);
    updateCurrentTime();
    durationContainer.textContent = calculateTime(audio.duration);
  };

  const updateSharelinks = () => {
    let link = new URL(window.location.href);
    link.searchParams.set("utm_medium", "social");
    link.searchParams.set("utm_campaign", "sharebutton");
    if (useTimestampInput.checked) {
      link.searchParams.set("t", `${seekSlider.value}s`);
    } else {
      // Remove the timestamp parameter in case it was set
      link.searchParams.delete("t");
    }

    const shareBluesky = document.getElementById(
      "js-share-bluesky",
    ) as HTMLAnchorElement;
    const shareFacebook = document.getElementById(
      "js-share-facebook",
    ) as HTMLAnchorElement;
    const shareWhatsapp = document.getElementById(
      "js-share-whatsapp",
    ) as HTMLAnchorElement;
    const shareMail = document.getElementById(
      "js-share-mail",
    ) as HTMLAnchorElement;

    // Bluesky
    const blueskyLink = new URL(link);
    blueskyLink.searchParams.set("utm_source", "Bluesky");

    const blueskyShareUrl = new URL("https://bsky.app/intent/compose");
    blueskyShareUrl.searchParams.set("text", blueskyLink.toString());
    shareBluesky.href = blueskyShareUrl.toString();

    // Facebook
    const facebookLink = new URL(link);
    facebookLink.searchParams.set("utm_source", "Facebook");

    const facebookShareUrl = new URL("https://www.facebook.com/sharer.php");
    facebookShareUrl.searchParams.set("u", facebookLink.toString());
    shareFacebook.href = facebookShareUrl.toString();

    // WhatsApp
    const whatsAppLink = new URL(link);
    whatsAppLink.searchParams.set("utm_source", "WhatsApp");

    const whatsAppShareUrl = new URL("whatsapp://send");
    whatsAppShareUrl.searchParams.set("text", whatsAppLink.toString());
    shareWhatsapp.href = whatsAppShareUrl.toString();

    // Mail
    const mailLink = new URL(link);
    mailLink.searchParams.set("utm_source", "E-mail");

    const mailShareUrl = new URL("mailto:");
    mailShareUrl.searchParams.set("body", mailLink.toString());
    shareMail.href = mailShareUrl.toString();
  };

  const audio = document.getElementById("js-audio") as HTMLAudioElement;
  const seekSlider = document.getElementById(
    "js-audio-track",
  ) as HTMLInputElement;
  const durationContainer = document.getElementById(
    "js-duration",
  ) as HTMLSpanElement;
  const currentTimeContainers =
    document.getElementsByClassName("js-current-time");
  const playIconContainer = document.getElementById(
    "js-play",
  ) as HTMLSpanElement;
  const useTimestampInput = document.getElementById(
    "js-use-timestamp",
  ) as HTMLInputElement;
  let raf: number | null = null;

  playIconContainer.addEventListener("click", () => {
    if (audio.paused) {
      audio.play();
      raf = requestAnimationFrame(whilePlaying);
    } else {
      audio.pause();
      if (raf) {
        cancelAnimationFrame(raf);
      }
    }
  });

  useTimestampInput.addEventListener("change", () => {
    updateSharelinks();
  });

  if (audio.readyState > 0) {
    initPlayer();
    updateSharelinks();
  } else {
    audio.addEventListener("loadedmetadata", () => {
      initPlayer();
      updateSharelinks();
    });
  }

  audio.addEventListener("play", () => {
    playIconContainer.dataset.state = "playing";
    
    // If user seeked before playing, apply the seek time
    if (userSeekedBeforePlay && targetSeekTime > 0) {
      // Use playing event to ensure audio is ready on iOS
      const applySeek = () => {
        audio.currentTime = targetSeekTime;
        userSeekedBeforePlay = false;
        audio.removeEventListener('playing', applySeek);
      };
      audio.addEventListener('playing', applySeek, { once: true });
    }
  });

  audio.addEventListener("pause", () => {
    playIconContainer.dataset.state = "paused";
  });

  audio.addEventListener("stop", () => {
    playIconContainer.dataset.state = "stopped";
  });

  let userSeekedBeforePlay = false;
  let targetSeekTime = 0;

  seekSlider.addEventListener("input", () => {
    updateCurrentTime();
    if (!audio.paused) {
      if (raf) {
        cancelAnimationFrame(raf);
      }
    }
  });

  seekSlider.addEventListener("change", () => {
    targetSeekTime = Number(seekSlider.value);
    userSeekedBeforePlay = true;
    
    // Try to set currentTime if audio is ready
    if (audio.readyState >= 2) {
      audio.currentTime = targetSeekTime;
      userSeekedBeforePlay = false;
    }
    
    if (!audio.paused) {
      requestAnimationFrame(whilePlaying);
    }
  });
</script>
